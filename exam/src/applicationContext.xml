<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
		<property name="minPoolSize" value="${minPoolSize}"></property>
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<property name="acquireIncrement" value="${acquireIncrement}"></property>
		<property name="maxStatements" value="${maxStatements}"></property>
		<property name="maxStatementsPerConnection" value="${maxStatementsPerConnection}"></property>
		<property name="maxIdleTime" value="${maxIdleTime}"></property>
	</bean>
	<!-- session工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<!-- 数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 是否显示sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 是否格式化sql -->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<prop key="hibernate.jdbc.fetch_size">20</prop>
				<prop key="connection.useUnicode">true</prop>
				<prop key="connection.characterEncoding">utf-8</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath:com/alex/exam/model/*.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 事务策略 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*"/>
			<tx:method name="add*"/>
			<tx:method name="delete*"/>
			<tx:method name="update*"/>
			<tx:method name="edit*"/>
			<tx:method name="move*"/>
			<!-- 匹配以上的方法将使用事务，其余方法不使用事务 -->
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 事务应用 -->
	<aop:config>
		<!-- 在com.alex.exam.service包及其子包下的方法都使用txAdvice这个策略 -->
		<aop:pointcut expression="execution(* com.alex.exam.service..*(..))" id="pointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
	
	<!-- daos -->
	<bean id="baseDao" class="com.alex.exam.dao.impl.BaseDaoImpl" abstract="true">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="areaDao" class="com.alex.exam.dao.impl.AreaDaoImpl" parent="baseDao"></bean>
	<bean id="orgDao" class="com.alex.exam.dao.impl.OrgDaoImpl" parent="baseDao"></bean>
	<bean id="configDao" class="com.alex.exam.dao.impl.ConfigDaoImpl" parent="baseDao"></bean>
	<bean id="userDao" class="com.alex.exam.dao.impl.UserDaoImpl" parent="baseDao"></bean>
	
	<!-- services -->
	<bean id="areaService" class="com.alex.exam.service.impl.AreaServiceImpl">
		<constructor-arg index="0" ref="areaDao"></constructor-arg>
	</bean>
	<bean id="orgService" class="com.alex.exam.service.impl.OrgServiceImpl">
		<constructor-arg index="0" ref="orgDao"></constructor-arg>
	</bean>
	<bean id="configService" class="com.alex.exam.service.impl.ConfigServiceImpl">
		<constructor-arg index="0" ref="configDao"></constructor-arg>
	</bean>
	<bean id="userService" class="com.alex.exam.service.impl.UserServiceImpl">
		<constructor-arg index="0" ref="userDao"></constructor-arg>
	</bean>
	
	<!-- actions -->
	<bean id="areaAction" class="com.alex.exam.action.AreaAction" scope="prototype">
		<property name="areaService" ref="areaService"></property>
	</bean>
	<bean id="orgAction" class="com.alex.exam.action.OrgAction" scope="prototype">
		<property name="orgService" ref="orgService"></property>
		<property name="areaService" ref="areaService"></property>
	</bean>
	<bean id="configAction" class="com.alex.exam.action.ConfigAction" scope="prototype">
		<property name="configService" ref="configService"></property>
	</bean>
	<bean id="userAction" class="com.alex.exam.action.UserAction" scope="prototype">
		<property name="userService" ref="userService"></property>
		<property name="orgService" ref="orgService"></property>
	</bean>
	
	
	<bean id="init" class="com.alex.exam.init.Init" init-method="init">
		<property name="configService" ref="configService"></property>
	</bean>
</beans>